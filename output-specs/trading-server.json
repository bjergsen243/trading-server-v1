{
  "openapi": "3.0.0",
  "paths": {
    "/api/users/profile/u/{userId}": {
      "get": {
        "operationId": "Get public user information by id",
        "summary": "Get public user information by id",
        "description": "Get public user information by id",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      }
    },
    "/api/users/profile/m/{email}": {
      "get": {
        "operationId": "Get public user information by email",
        "summary": "Get public user information by email",
        "description": "Get public user information by email",
        "parameters": [
          {
            "name": "email",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      }
    },
    "/api/users/profile": {
      "get": {
        "operationId": "getMyProfile",
        "summary": "Get my profile",
        "description": "Get my profile",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/auth/signin": {
      "post": {
        "operationId": "public.users.signIn",
        "summary": "Sign in by email",
        "description": "Sign in by email",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignInDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/refresh-token": {
      "post": {
        "operationId": "public.users.refreshToken",
        "summary": "Refresh for new access token",
        "description": "Refresh for new access token",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/logout": {
      "post": {
        "operationId": "logout",
        "summary": "User logout",
        "description": "User logout",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/payment/create-account": {
      "post": {
        "operationId": "Create new payment account",
        "summary": "Create new payment account",
        "description": "Create new payment account",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentAccountRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentAccountResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "payment"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/payment/my-accounts": {
      "get": {
        "operationId": "getMyPaymentAccounts",
        "summary": "Get my payment accounts.",
        "description": "Get my payment accounts.",
        "parameters": [
          {
            "name": "type",
            "required": false,
            "in": "query",
            "description": "Type of wallet",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "credit",
                  "debit",
                  "visa"
                ]
              }
            }
          },
          {
            "name": "currency",
            "required": false,
            "in": "query",
            "description": "Type of currency",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "vnd",
                  "usd",
                  "eur"
                ]
              }
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number, default: 1",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number items per page, default: 20",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMyAccountsResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "payment"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/payment/my-txs": {
      "get": {
        "operationId": "getMyTransactions",
        "summary": "Get my transactions.",
        "description": "Get my transactions.",
        "parameters": [
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "Transaction status",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "waiting",
                  "succeed",
                  "failed",
                  "reverted"
                ]
              }
            }
          },
          {
            "name": "type",
            "required": false,
            "in": "query",
            "description": "Type of payment",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "withdraw",
                  "send"
                ]
              }
            }
          },
          {
            "name": "currency",
            "required": false,
            "in": "query",
            "description": "Type of currency",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "vnd",
                  "usd",
                  "eur"
                ]
              }
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number, default: 1",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number items per page, default: 20",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMyTxsResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "payment"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "Trading Server",
    "description": "Swagger documentation for Trading Server",
    "version": "1.0.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "ErrorMessageDto": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 400
          },
          "message": {
            "example": [
              "Error message 1",
              "Error message 2"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "error": {
            "type": "string",
            "example": "Bad Request"
          }
        },
        "required": [
          "statusCode",
          "message",
          "error"
        ]
      },
      "UnauthorizedResponseDto": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 401
          },
          "message": {
            "example": [
              "Unauthorized"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "error": {
            "type": "string",
            "example": "Unauthorized"
          }
        },
        "required": [
          "statusCode",
          "message",
          "error"
        ]
      },
      "UserProfileResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "665d9073c420b2b3e4927c78"
          },
          "email": {
            "type": "string",
            "example": "test@gmail.com"
          },
          "username": {
            "type": "string",
            "example": "vippro"
          }
        },
        "required": [
          "id",
          "email",
          "username"
        ]
      },
      "SignInDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "thanhsondeptrai243@gmail.com",
            "description": "User email"
          },
          "password": {
            "type": "string",
            "example": "password",
            "description": "User password"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "TokenResponseDto": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJFZmF1YVVsb3VDRDk0eCIsImVtYWlsIjoidGhhbmhzb25kZXB0cmFpMjQzQGdtYWlsLmNvbSIsImlhdCI6MTcxNzQwNDQ4OCwiZXhwIjoxNzE3NDkwODg4fQ.n_EZkYAK5Ou1hHLDXZktrP2uV89R9DXREcO9CwM9rhs",
            "description": "Access Token"
          },
          "refreshToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJFZmF1YVVsb3VDRDk0eCIsImVtYWlsIjoidGhhbmhzb25kZXB0cmFpMjQzQGdtYWlsLmNvbSIsImlhdCI6MTcxNzQwNDQ4OCwiZXhwIjoxNzE5OTk2NDg4fQ.mGEFDhxA_N1mwdzUvapamOBCGvb3uTE9aHy-yfbWHiA",
            "description": "Refresh Token"
          }
        },
        "required": [
          "accessToken",
          "refreshToken"
        ]
      },
      "RefreshTokenRequestDto": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "description": "Refresh Token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJFZmF1YVVsb3VDRDk0eCIsImVtYWlsIjoidGhhbmhzb25kZXB0cmFpMjQzQGdtYWlsLmNvbSIsImlhdCI6MTcxNzQwNDQ4OCwiZXhwIjoxNzE5OTk2NDg4fQ.mGEFDhxA_N1mwdzUvapamOBCGvb3uTE9aHy-yfbWHiA"
          }
        },
        "required": [
          "refreshToken"
        ]
      },
      "SuccessResponseDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Successful",
            "description": "message"
          }
        },
        "required": [
          "message"
        ]
      },
      "CreatePaymentAccountRequestDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "example": "665d9073c420b2b3e4927c78"
          },
          "type": {
            "type": "string",
            "enum": [
              "credit",
              "debit",
              "visa"
            ],
            "example": "credit"
          },
          "balance": {
            "type": "number",
            "example": 100
          },
          "currency": {
            "type": "string",
            "enum": [
              "vnd",
              "usd",
              "eur"
            ],
            "example": "vnd"
          }
        },
        "required": [
          "userId",
          "type",
          "balance",
          "currency"
        ]
      },
      "PaymentAccountResponseDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "User id"
          },
          "id": {
            "type": "string",
            "description": "Payment account id"
          },
          "type": {
            "type": "string",
            "enum": [
              "credit",
              "debit",
              "visa"
            ],
            "description": "Type of wallet",
            "example": "credit"
          },
          "balance": {
            "type": "number",
            "description": "Balance of this account"
          },
          "currency": {
            "type": "string",
            "enum": [
              "vnd",
              "usd",
              "eur"
            ],
            "description": "Currency of this account",
            "example": "vnd"
          }
        },
        "required": [
          "userId",
          "id",
          "type",
          "balance",
          "currency"
        ]
      },
      "GetMyAccountsResponseDto": {
        "type": "object",
        "properties": {
          "pagingCounter": {
            "type": "number",
            "example": 1,
            "description": "The starting index/serial/chronological number of first document in current page."
          },
          "offset": {
            "type": "number",
            "example": 2,
            "description": "Offset"
          },
          "hasNextPage": {
            "type": "boolean",
            "example": false
          },
          "hasPrevPage": {
            "type": "boolean",
            "example": true
          },
          "totalDocs": {
            "type": "number",
            "example": 10,
            "description": "Total number of documents in collection that matched a query."
          },
          "totalPages": {
            "type": "number",
            "example": 1,
            "description": "Total number of pages."
          },
          "limit": {
            "type": "number",
            "example": 10,
            "description": "Number of documents per page."
          },
          "page": {
            "type": "number",
            "example": 1,
            "description": "Current page number."
          },
          "docs": {
            "description": "Array of documents",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentAccountResponseDto"
            }
          }
        },
        "required": [
          "pagingCounter",
          "offset",
          "hasNextPage",
          "hasPrevPage",
          "totalDocs",
          "totalPages",
          "limit",
          "page",
          "docs"
        ]
      },
      "PaymentHistoryResponseDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "User id"
          },
          "accountId": {
            "type": "string",
            "description": "Account id"
          },
          "id": {
            "type": "string",
            "description": "Transaction id"
          },
          "type": {
            "type": "string",
            "enum": [
              "withdraw",
              "send"
            ],
            "description": "Type of transaction",
            "example": "send"
          },
          "status": {
            "type": "string",
            "enum": [
              "waiting",
              "succeed",
              "failed",
              "reverted"
            ],
            "description": "Status of transaction",
            "example": "waiting"
          },
          "amount": {
            "type": "number",
            "description": "Amount of this transaction"
          },
          "currency": {
            "type": "string",
            "enum": [
              "vnd",
              "usd",
              "eur"
            ],
            "description": "Currency of this transaction",
            "example": "vnd"
          }
        },
        "required": [
          "userId",
          "accountId",
          "id",
          "type",
          "status",
          "amount",
          "currency"
        ]
      },
      "GetMyTxsResponseDto": {
        "type": "object",
        "properties": {
          "pagingCounter": {
            "type": "number",
            "example": 1,
            "description": "The starting index/serial/chronological number of first document in current page."
          },
          "offset": {
            "type": "number",
            "example": 2,
            "description": "Offset"
          },
          "hasNextPage": {
            "type": "boolean",
            "example": false
          },
          "hasPrevPage": {
            "type": "boolean",
            "example": true
          },
          "totalDocs": {
            "type": "number",
            "example": 10,
            "description": "Total number of documents in collection that matched a query."
          },
          "totalPages": {
            "type": "number",
            "example": 1,
            "description": "Total number of pages."
          },
          "limit": {
            "type": "number",
            "example": 10,
            "description": "Number of documents per page."
          },
          "page": {
            "type": "number",
            "example": 1,
            "description": "Current page number."
          },
          "docs": {
            "description": "Array of documents",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentHistoryResponseDto"
            }
          }
        },
        "required": [
          "pagingCounter",
          "offset",
          "hasNextPage",
          "hasPrevPage",
          "totalDocs",
          "totalPages",
          "limit",
          "page",
          "docs"
        ]
      }
    }
  }
}